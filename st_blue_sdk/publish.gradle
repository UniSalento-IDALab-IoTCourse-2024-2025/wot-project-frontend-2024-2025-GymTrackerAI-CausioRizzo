/*
 * Copyright (c) 2022(-0001) STMicroelectronics.
 * All rights reserved.
 * This software is licensed under terms that can be found in the LICENSE file in
 * the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 */

apply plugin: 'maven-publish'

def LIB_GROUP_ID = 'com.st.blue.sdk'
def LIB_ARTIFACT_ID = 'st-blue-sdk'
def LIB_VERSION = '1.2.10'

tasks.register('sourceJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GithubPackages"
                url = uri("https://maven.pkg.github.com/STMicroelectronics/BlueSTSDK_Android")
                credentials {
                    username = System.getenv('GPR_USER') ?: project.properties['GPR_USER']
                    password = System.getenv('GPR_API_KEY') ?: project.properties['GPR_API_KEY']
                }
            }
            maven {
                name = 'Local'
                url = "file://${buildDir}/repo"
            }
        }
        publications {
            blueStSdk(MavenPublication) {
                groupId LIB_GROUP_ID
                artifactId LIB_ARTIFACT_ID
                version LIB_VERSION
                artifact("$buildDir/outputs/aar/st_blue_sdk-release.aar")
                artifact(sourceJar)

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.api.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
